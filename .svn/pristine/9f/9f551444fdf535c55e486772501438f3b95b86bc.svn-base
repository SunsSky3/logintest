package com.zhang.booking;

import java.io.* ;
import java.text.ParseException;
import java.text.SimpleDateFormat;

import javax.servlet.http.* ;
import javax.servlet.* ;

import java.util.Date;

import com.zhang.VerifyLogin.*;
import com.zhang.dao.MysqlAction;
import com.zhang.javabean.Booking;
import com.zhang.javabean.User;

//@WebServlet("/BookingServlet")
public class BookingServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
	
	
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException{
		  response.setContentType("text/html;charset=UTF-8") ;
		  request.setCharacterEncoding("UTF-8") ;		  

		  //get login username
		  HttpSession session =  request.getSession() ;
	      String username =(String) session.getAttribute("userName");  
	      System.out.println("登录用户名："+ username) ;	 

	      //get usertype
	      MysqlAction mysqlaction = new MysqlAction();
	      try {
			User newuser =  mysqlaction.getUserbyName(username);
			String usertype = newuser.getUserType();
			session.setAttribute("usertype", usertype);
			 System.out.println("用户类型："+usertype);
		} catch (Exception e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}	  
				
	      String meetRoomSel = request.getParameter("meetRoomSel");			  
//		  int roomnum=Integer.parseInt(meetRoomSel);
		  System.out.println("预定的会议室1："+ meetRoomSel) ;
		  int bookingroomnum=Integer.parseInt(meetRoomSel);
		  System.out.println("预定的会议室："+ bookingroomnum) ;

		  
		  String[] thistime = request.getParameterValues("thisTime");		 
		  System.out.println("时隙长度："+thistime.length);
		  String timelots="";
		  if(thistime!=null)
			  for(int i=0;i<thistime.length;i++){			  
				  timelots = timelots+thistime[i]+",";
		  }
//		  int timelots=Integer.parseInt(thistime);
//		  System.out.println("长度："+thistime.length());
//		  System.out.println("预定的时间："+timelots);
		  
		  String confertype = request.getParameter("meetType");
		  System.out.println("预定的会议室类型："+confertype);
		  
		  String[] participant = request.getParameterValues("thisparticipants");
		  String  participants="";
//		  if (participants!=null) 
//			 for(int i=0;i<participants.length;i++){
//				 System.out.println("参会者："+participants[i]); 
//		   }
		  if(participant!=null)
			  for(int i=0;i<participant.length;i++){			  
			  participants = participants+participant[i]+",";
		  }
		  
		  String confername = request.getParameter("meetName");
		  System.out.println("会议名："+confername );
		  
		  String confertheme = request.getParameter("meetContent");
		  System.out.println("会议主题："+confertheme );		   
		  
		  String chooseResevDate = request.getParameter("chooseResevDate");
//		  int time = Integer.parseInt(chooseResevDate);
//		  System.out.println("预定的日期0："+time);
		  System.out.println("预定的日期："+chooseResevDate);	  			  
		  Date date=null ;	
//		  long date1 = 0;
		  SimpleDateFormat DATE_FORMAT = new SimpleDateFormat("yyyy-MM-dd");
		  try {
			 date = DATE_FORMAT.parse(chooseResevDate);
//             date1 = DATE_FORMAT.parse(chooseResevDate).getTime();
//			 java.sql.Date sql_date = new java.sql.Date(date.getTime());
//			 session.setAttribute("date", date) ;  
			 System.out.println("转换格式之后的时间："+date);	 			 
			 
			 
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		};
		
		Date now = new Date();
		
		MD5Implementation md5Implementation = new MD5Implementation();
		String bookinghash = md5Implementation.createPassPhrase(confername+now);
		session.setAttribute("bookinghash", bookinghash);
		
		// change date format form java.util.Date to java.sql.Date	
//		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");	

		java.sql.Date sql_date = new java.sql.Date(now.getTime());
		
		Boolean allow_font_styles = true;				
		Boolean allow_recording = true;
		Boolean allow_user_questions = false;
		Boolean appointment = false;
		Boolean auto_video_select = false;
		Boolean chat_moderated = false;
		Boolean chat_opened =false;
		String comment_field = "";
		String confno = "";
		Boolean deleted = false;
		int demo_time =0;
		long externalRoomId = 0;
		String externalRoomType = "";
		Boolean files_opened = false ;
		Boolean hide_actions_menu = false;
		Boolean hide_activities_and_actions = false;
		Boolean hide_chat = false;
		Boolean hide_files_explorer = false;
		Boolean hide_screen_sharing = false;
		Boolean hide_top_bar = false;
		Boolean hide_whiteboard = false;
		Boolean is_audio_only = false;
		Boolean is_closed = false;
		Boolean isdemoroom = false;
		Boolean ismoderatedroom = false;
		Boolean ispublic = true;
		String confersystemname = confername ;
		long numberOfPartizipants = 20;
		long owner_id = 0;
		String pin = "";
		String redirect_url = "";
		Boolean show_microphone_status = false;
		Boolean sip_enabled = false;		
		java.sql.Date starttime = sql_date;
		java.sql.Date updatetime = null;
		Boolean wait_for_recording = false;
		long roomtypes_id = 1;	
		System.out.println(starttime);
		
		Booking newbooking = new Booking();
		newbooking.setName(username);
	    newbooking.setDate(date);
	    newbooking.setTime(timelots);
	    newbooking.setRoomNum(bookingroomnum);
	    newbooking.setConferparticipants(participants);
	    newbooking.setConferType(confertype);
	    newbooking.setConferName(confername);
	    newbooking.setConferTheme(confertheme);
//	    newbooking.setAllowFontStytles(allow_font_styles);
//	    newbooking.setAllowRecording(allow_recording);
//	    newbooking.setAllowUserQuestions(allow_user_questions);
//	    newbooking.setAppointment(appointment);
//	    newbooking.setAutoVideoSelect(auto_video_select);
//	    newbooking.setChatModerated(chat_moderated);
//	    newbooking.setChatOpened(chat_opened);
//	    newbooking.setCommentField(comment_field);
//	    newbooking.setConfno(confno);
//	    newbooking.setDeleted(deleted);
//	    newbooking.setDemoTime(demo_time);
//	    newbooking.setExternalRoomId(externalRoomId);
//	    newbooking.setExternalRoomType(externalRoomType);
//	    newbooking.setFilesOpened(files_opened);
//	    newbooking.setHideActionsMenu(hide_actions_menu);
//	    newbooking.setHideActivitiesandActions(hide_activities_and_actions);
//	    newbooking.setHideChat(hide_chat);
//	    newbooking.setHideFilesExplorer(hide_files_explorer);
//	    newbooking.setHideScreenSharing(hide_screen_sharing);
//	    newbooking.setHideTopBar(hide_top_bar);
//	    newbooking.setHideWhiteboard(hide_whiteboard);
//	    newbooking.setIsAudioOnly(is_audio_only);
//	    newbooking.setIsClosed(is_closed);
//	    newbooking.setIsDemoroom(isdemoroom);
//	    newbooking.setIsModeratedroom(ismoderatedroom);
//	    newbooking.setIsModeratedroom(ismoderatedroom);
//	    newbooking.setIsPublic(ispublic);
//	    newbooking.setConferSystemName(confersystemname);
//	    newbooking.setNumberOfPartizipants(numberOfPartizipants);
//	    newbooking.setOwnerId(owner_id);
//	    newbooking.setPin(pin);
//	    newbooking.setRedirectUrl(redirect_url);
//	    newbooking.setShowMicrophoneStatus(show_microphone_status);
//	    newbooking.setSipEnabled(sip_enabled);
//	    newbooking.setStartTime(starttime);
//	    newbooking.setUpdateTime(updatetime);
//	    newbooking.setWaitForRecording(wait_for_recording);
//	    newbooking.setRoomTypesId(roomtypes_id);
	    newbooking.setBookingHash(bookinghash);
		try {
			newbooking.AddBooking();
			mysqlaction.addBookingtoConferSystem(allow_font_styles, allow_recording, allow_user_questions, appointment, auto_video_select, chat_moderated, chat_opened, comment_field, confno, deleted, demo_time, externalRoomId, externalRoomType, files_opened, hide_actions_menu, hide_activities_and_actions, hide_chat, hide_files_explorer, hide_screen_sharing, hide_top_bar, hide_whiteboard, is_audio_only, is_closed, isdemoroom, ismoderatedroom, ispublic, confersystemname, numberOfPartizipants, owner_id, pin, redirect_url, show_microphone_status, sip_enabled, starttime, updatetime, wait_for_recording, roomtypes_id);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		 response.sendRedirect("reservationInfo.jsp") ;
		 
	}
	  
}
