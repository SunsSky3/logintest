package com.zhang.dao;
import java.awt.Component;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

import javax.swing.JOptionPane;

import com.zhang.javabean.*;


public class MysqlAction {
  private Connection connect = null;
  private Statement statement = null;
  private ResultSet resultSet = null;
  
  public void databaseConnection() throws Exception{
	// This will load the MySQL driver
      Class.forName("com.mysql.jdbc.Driver");
      // Setup the connection with the DB
      connect = DriverManager.getConnection("jdbc:mysql://localhost?"

              + "user=root&password=0000");             

      // Statements allow to issue SQL queries to the database
      statement = connect.createStatement();
 
  }
  
  //method to get result by username and password "zhang"
  public int getResultbyUserNameandPassword(String username,String password) throws Exception {
	    try {
	    	databaseConnection();	    	
	      // Result set get the result of the SQL query
	      resultSet = statement.executeQuery("select * from openmeetings.om_user where login='"+username+"' and password= '"+password+"'" );
	      int a=0;
	      if (resultSet.next()){
	    	a=1;  
	      }
	      else{
	    	  a=0;	    		 
	    	  }
	      return a;
	     	      
	    } catch (Exception e) {
	      throw e;
	     
	    } finally {
	      close();
	    }
  
	  }
  
//method to get the available time slots
	public String getNotAvailableTimes(Date date,int roomnum) throws Exception {
	    try {
	    	databaseConnection();
	    	SimpleDateFormat DATE_FORMAT = new SimpleDateFormat("yyyy-MM-dd");
	      // Result set get the result of the SQL query
	      resultSet = statement.executeQuery("select bookingnum,timeslotID from openmeetings.booking "
	      		+ " where date='"+DATE_FORMAT.format(date)+"' order by bookingnum desc");
	     String timeslotstring = new String();//new String object to get the time slots
	      while (resultSet.next()) {
	       //accessing the time slot by ID  	 
	    	  timeslotstring = timeslotstring+ resultSet.getString("timeslot")+",";	         	          
	          
	      } 
	      return timeslotstring;
	     	      
	    } catch (Exception e) {
	      throw e;
	     
	    } finally {
	      close();
	    }
	
	  }
  
  //method to getInfo by bookingnum
  public Booking getBookingbybookinghash(int conferId) throws Exception {
	    try {
	    	databaseConnection();	    	
	      // Result set get the result of the SQL query
	      resultSet = statement.executeQuery("select * from openmeetings.booking where bookingnum='"+conferId+"'" );
	      Booking newbooking = new Booking();
	       // ResultSet is initially before the first data set
	      while (resultSet.next()) {
	       
	    	  
//	      	  int userID = resultSet.getInt("id");
//	      	  String booker = resultSet.getString("name");
//	      	  Date booking_date =resultSet.getDate(date);
	          int roomnum = resultSet.getInt("roomnum");
	          String confername = resultSet.getString("confername");
	          String confertype = resultSet.getString("confertype");
	          String confertheme = resultSet.getString("confertheme");	 
	          String conferagenda = resultSet.getString("conferagenda");
	          String participants = resultSet.getString("participants");
	          String timeslotID = resultSet.getString("timeslotID");
	          
//	          newbooking.setName(booker);
	          newbooking.setRoomNum(roomnum);
	          newbooking.setConferName(confername);
	          newbooking.setConferType(confertype);
	          newbooking.setConferTheme(confertheme);
	          newbooking.setConferAgenda(conferagenda);
	          newbooking.setConferparticipants(participants);
	          newbooking.setTime(timeslotID);       
	          	        	          
	      }
	      return newbooking;
	     	      
	    } catch (Exception e) {
	      throw e;
	     
	    } finally {
	      close();
	    }

	  }
//method to get the users
  public User getUserbyName(String username) throws Exception {
	    try {
	    	databaseConnection();
	    	
	      resultSet = statement.executeQuery("select * from openmeetings.om_user where login = '"+ username+"'");
	      
	      User newuser = new User();
	       // ResultSet is initially before the first data set
	      while (resultSet.next()) {
	        //  to get the columns via name

	      	  int userID = resultSet.getInt("id");
	      	  String uname = resultSet.getString("login");
	          String password = resultSet.getString("password");
	          String firstName = resultSet.getString("firstname");
	          String lastName = resultSet.getString("lastname");
	          int uType = resultSet.getInt("level_id");	          
	          
	          newuser.setUserId(userID);
	          newuser.setUserName(uname);
	          newuser.setPassWord(password);
	          newuser.setFName(firstName);
	          newuser.setLName(lastName);
	          newuser.setUserType(uType);
     
	          
	      } 
	      return newuser; 
	      
	    } catch (Exception e) {
	      throw e;
	     
	    } finally {
	      close();
	    }
			    
	  }
  
 //method to add a new booking
    public void addBooking(String name, Date date,int roomnum,String confername,String confertype,String confertheme,String conferagenda, String participants,String time,String bookinghash) throws Exception {
	    try {
	    	databaseConnection();
	      	      // change the format of the date 
	      	SimpleDateFormat DATE_FORMAT = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
	     	statement.execute("insert into openmeetings.booking set name='"+name+"',date='"+DATE_FORMAT.format(date)+"',roomnum='"+roomnum+"',confername='"+confername+"',confertype='"+confertype+"',confertheme='"+confertheme+"',conferagenda='"+conferagenda+"', participants='"+participants+"',timeslotID='"+time+"',bookinghash='"+bookinghash+"'");
	     		      
	    } catch (Exception e) {
	      throw e;
	    			
	    } finally {
	      close();
	    }
	    Component frame = null;
  		JOptionPane.showMessageDialog(frame,
  	    	    "Booking is added successfully",
  	    	    "",
  	    	    JOptionPane.PLAIN_MESSAGE); 		
	    
	   	  }
 
    //method to add the booking to conferencesystem
//    public void addBookingtoConferSystem(int allow_font_styles,int allow_recording,int allow_user_questions,int appointment,int auto_video_select,int chat_moderated,int chat_opened,String comment_field,String confno,int deleted,int demo_time,long externalRoomId,String externalRoomType,int files_opened,int hide_actions_menu,int hide_activities_and_actions,int hide_chat,int hide_files_explorer,int hide_screen_sharing,int hide_top_bar,int hide_whiteboard,int is_audio_only,int is_closed,int isdemoroom,int ismoderatedroom,int ispublic,int numberOfPartizipants,String confername) throws Exception {
    public void addBookingtoConferSystem(Boolean allow_font_styles,Boolean allow_recording,Boolean allow_user_questions,Boolean appointment,
    		Boolean auto_video_select,Boolean chat_moderated,Boolean chat_opened,
    		String comment_field,String confno,Boolean deleted,int demo_time,
    		long externalRoomId,String externalRoomType,Boolean files_opened,
    		Boolean hide_actions_menu,Boolean hide_activities_and_actions,
    		Boolean hide_chat,Boolean hide_files_explorer,Boolean hide_screen_sharing,
    		Boolean hide_top_bar,Boolean hide_whiteboard,Boolean is_audio_only,
    		Boolean is_closed,Boolean isdemoroom,Boolean ismoderatedroom,Boolean ispublic,
    		String confersystemname,long numberOfPartizipants,long owner_id,String pin,String redirect_url,
    		Boolean show_microphone_status,Boolean sip_enabled,java.sql.Date  starttime,java.sql.Date  updatetime,
    		Boolean wait_for_recording,long roomtypes_id) throws Exception {    
    try {
    	 connect = DriverManager.getConnection("jdbc:mysql://localhost?"

              + "user=root&password=0000");             

      // Statements allow to issue SQL queries to the database
     // statement = connect.createStatement();
	      	      // change the format of the date
//	      	SimpleDateFormat DATE_FORMAT = new SimpleDateFormat("yyyy-MM-dd");name='"+confername+"',  ='"++"',
	     	String queryString="insert into openmeetings.room("
	     			+ "allow_font_styles,allow_recording,allow_user_questions,appointment,auto_video_select,chat_moderated,chat_opened,comment_field,confno,deleted,demo_time,externalRoomId,externalRoomType,files_opened"
	     															+ ",hide_actions_menu,hide_activities_and_actions"
	     																	+ ",hide_chat,hide_files_explorer,hide_screen_sharing"
	     																			+ ",hide_top_bar,hide_whiteboard,is_audio_only,is_closed,isdemoroom"
	     																+",ismoderatedroom,ispublic,name,numberOfPartizipants,owner_id,pin,redirect_url,show_microphone_status,sip_enabled"
	     																			+ ",starttime,updatetime,wait_for_recording,roomtypes_id) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
	     	 PreparedStatement ps=connect.prepareStatement(queryString);
	     	 ps.setBoolean(1, allow_font_styles);
	     	 ps.setBoolean(2, allow_recording);
	     	 ps.setBoolean(3, allow_user_questions);	     	 
	     	 ps.setBoolean(4, appointment);
	     	 ps.setBoolean(5, auto_video_select);
	     	 ps.setBoolean(6, chat_moderated);
	     	 ps.setBoolean(7, chat_opened);
	     	 ps.setString(8, comment_field);
	     	 ps.setString(9, confno);
	     	 ps.setBoolean(10, deleted);
	     	 ps.setInt(11, demo_time);
	     	 ps.setLong(12, externalRoomId);
	     	 ps.setString(13, externalRoomType);	     	 
	     	 ps.setBoolean(14, files_opened );	
	     	 ps.setBoolean(15, hide_actions_menu );
	     	 ps.setBoolean(16, hide_activities_and_actions );
	     	 ps.setBoolean(17, hide_chat);	
	     	 ps.setBoolean(18, hide_files_explorer);
	     	 ps.setBoolean(19, hide_screen_sharing);
	     	 ps.setBoolean(20, hide_top_bar);	
	     	 ps.setBoolean(21, hide_whiteboard);
	     	 ps.setBoolean(22, is_audio_only);
	         ps.setBoolean(23, is_closed);	
	     	 ps.setBoolean(24, isdemoroom);
	     	 ps.setBoolean(25, ismoderatedroom);
	         ps.setBoolean(26, ispublic);
	         ps.setString(27, confersystemname);
	         ps.setLong(28, numberOfPartizipants);
	         ps.setLong(29, owner_id);
	         ps.setString(30, pin);
	         ps.setString(31, redirect_url);
	         ps.setBoolean(32, show_microphone_status);
	     	 ps.setBoolean(33, sip_enabled);
	     	 ps.setDate(34, starttime);
	     	 ps.setDate(35, updatetime);
	     	 ps.setBoolean(36, wait_for_recording);
	     	 ps.setLong(37, roomtypes_id);
	     	 
	     	 int i= ps.executeUpdate();
	     	 System.out.println("booking:"+i);
	     	
	     	 
//	     	statement.execute("insert into openmeetings.room set name='"+name+"',date='"+DATE_FORMAT.format(date)+"',timeslotID='"+time+"',roomnum='"+roomnum+"',participants='"+participants+"',confertype='"+confertype+"',confertheme='"+confertheme+"'");	      
	    } catch (Exception e) {
	      throw e;
	    			
	    } finally {
	      close();
	    }
	    		    
	   	  }
    
//    public void addFileInfo(String filename,String uploader,java.sql.Date uploadtime,int roomnum,int bookingnum,double filesize,String bookinghash)throws Exception{
//    	  try {
//    	    	 connect = DriverManager.getConnection("jdbc:mysql://localhost?"
//
//    	              + "user=root&password=0000");             
//
//    	      // Statements allow to issue SQL queries to the database
//    	     // statement = connect.createStatement();
//    		      	      // change the format of the date
////    		      	 SimpleDateFormat DATE_FORMAT = new SimpleDateFormat("yyyy-MM-dd");name='"+confername+"',  ='"++"',
//    		         String queryString="insert into openmeetings.file("
//    		        		 +"filename,uploader,uploadtime,roomnum"
//    		        	     +",bookingnum,filesize,bookinghash) values(?,?,?,?,?,?,?)";
//    		     	 PreparedStatement ps=connect.prepareStatement(queryString);
//    		     	 ps.setString(1, filename);
//    		     	 ps.setString(2, uploader);
//    		     	 ps.setDate(3, uploadtime);	     	 
//    		     	 ps.setInt(4, roomnum);
//    		     	 ps.setInt(5, bookingnum);
//    		     	 ps.setDouble(6, filesize);
//    		     	 ps.setString(7,bookinghash);
//    		     	 int i= ps.executeUpdate();
//    		     	 
//    		     	 System.out.println("fileInfo:"+i);   	     	
//    		     	 
//     
//    		    } catch (Exception e) {
//    		      throw e;
//    		    			
//    		    } finally {
//    		      close();
//    		    }
//    }
    
    public void addFileInfo(String filename,String uploader,Date uploadtime,int roomnum,int bookingnum,double filesize)throws Exception{
  	  try {
  		databaseConnection();	    	
	      // Result set get the result of the SQL query
  		SimpleDateFormat DATE_FORMAT = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
     	statement.execute("insert into openmeetings.file set filename='"+filename+"',uploader='"+uploader+"',uploadtime='"+DATE_FORMAT.format(uploadtime)+"',roomnum='"+roomnum+"',bookingnum='"+bookingnum+"',filesize='"+filesize+"'");
     		                
 	     	
  		     	 
   
  		    } catch (Exception e) {
  		      throw e;
  		    			
  		    } finally {
  		      close();
  		    }
  }
  //method file Info by filename 
  	public int getFileInfobyName(String filename) throws Exception {
  	    try {
  	    	databaseConnection();
  	      // Result set get the result of the SQL query
  	      resultSet = statement.executeQuery("select filename from openmeetings.file "
  	      		+ " where filename='"+filename+"' ");
  	     int a = 0;
  	      while (resultSet.next()) {
  	       	 
  	    	 a=1;         	          
  	          
  	      } 
  	      return a;
  	     	      
  	    } catch (Exception e) {
  	      throw e;
  	     
  	    } finally {
  	      close();
  	    }
  	
  	  } 
//  	public String getBookingInfobyNameandDate(int roomnum,Date date) throws Exception {
//	    try {
//	    	System.out.println("调用了方法：getBookingInfobyNameandDate");
//	    	databaseConnection();
//	    	SimpleDateFormat DATE_FORMAT = new SimpleDateFormat("yyyy-MM-dd");
//	      // Result set get the result of the SQL query
//	      resultSet = statement.executeQuery("select bookingnum,timeslotID from openmeetings.booking "
//	      		+ " where date='"+DATE_FORMAT.format(date)+"' order by bookingnum desc");
//	     String timeslotstring = new String();//new String object to get the time slots
//	      while (resultSet.next()) {
//	       //accessing the time slot by ID  	 
//	    	  timeslotstring = timeslotstring+ resultSet.getString("timeslot")+",";	         	          
//	          
//	      } 
//	      return timeslotstring;
//	     	      
//	    } catch (Exception e) {
//	      throw e;
//	     
//	    } finally {
//	      close();
//	    }
//	
//	  }
  	
  	public String getBookingInfobyNameandDate(int roomnum,Date date) throws Exception {
  	    try {
  	    	System.out.println("调用了方法：getBookingInfobyNameandDate");
  	    	databaseConnection();
  	    	SimpleDateFormat DATE_FORMAT = new SimpleDateFormat("yyyy-MM-dd");
  	      // Result set get the result of the SQL query
  	    	
  	      resultSet = statement.executeQuery("select * from openmeetings.booking where roomnum='"+roomnum+"'and date = '"+DATE_FORMAT.format(date)+"' ");
  	   String timeslot = new String();
  	      while (resultSet.next()) {
  	       	 
  	    	timeslot = timeslot + resultSet.getString("timeslotID")+",";       	          
  	  
  	      } 
  	      return timeslot;
  	     	      
  	    } catch (Exception e) {
  	      throw e;
  	     
  	    } finally {
  	      close();
  	    }
  	
  	  } 
  	
    public void addRoom(String roomname,String roomcapacity,String roomlocation,String roomequipment,Date newroomtime)throws Exception{
    	  try {
    		databaseConnection();	    	
  	      // Result set get the result of the SQL query
    		SimpleDateFormat DATE_FORMAT = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
       	statement.execute("insert into openmeetings.room_huiqian set roomname='"+roomname+"',capacity='"+roomcapacity+"',location='"+roomlocation+"',equipment='"+roomequipment+"',date='"+DATE_FORMAT.format(newroomtime)+"'");
     	                
    		    } catch (Exception e) {
    		      throw e;
    		    			
    		    } finally {
    		      close();
    		    }
    	  Component frame = null;//message
			JOptionPane.showMessageDialog(frame,
		    	    "room is added successfully",
		    	    "",
		    	    JOptionPane.PLAIN_MESSAGE);	
    }
    
  //  to close the resultSet and connection
  private void close() {
    try {
      if (resultSet != null) {
        resultSet.close();
      }

      if (statement != null) {
        statement.close();
      }

      if (connect != null) {
        connect.close();
      }
    } catch (Exception e) {

    }
  }
  
  
  
//method to get the available time slots
//    public String getAvailableTimes(Date date) throws Exception {
//	    try {
//	    	databaseConnection();
//	    	SimpleDateFormat DATE_FORMAT = new SimpleDateFormat("yyyy-MM-dd");
//	      // Result set get the result of the SQL query
//	      resultSet = statement.executeQuery("select ID,timeslots.timeslot from room_booking.timeslots "
//	      		+ "where ID not in (select timeslot from room_booking.booking where date='"+DATE_FORMAT.format(date)+"') order by ID desc");
//	     String timeslotstring = new String();//new String object to get the time slots
//	      while (resultSet.next()) {
//	       //accessing the time slot by ID  	 
//	    	  timeslotstring = timeslotstring+ resultSet.getString("ID")+":("+resultSet.getString("timeslot")+"),";
//	         	          
//	          
//	      } 
//	      return timeslotstring;
//	     	      
//	    } catch (Exception e) {
//	      throw e;
//	     
//	    } finally {
//	      close();
//	    }
//    
//	  }
    //method to get all the users from the user table
    public String getAllUsers() throws Exception {
	    try {
	    	databaseConnection();
	    	
	      // Result set get the result of the SQL query
	      resultSet = statement.executeQuery("select login from openmeetings.om_user");
	     String allusers = new String();//new String object to store the users
	      while (resultSet.next()) {
	       //accessing the users by username 
	    	  allusers = allusers+ resultSet.getString("login")+","; 
	                     
	      } 
	      return allusers;
	     	      
	    } catch (Exception e) {
	      throw e;
	     
	    } finally {
	      close();
	    }
    
	  }
    //by zhang
    public String getAllRooms() throws Exception{
    		try {
    			databaseConnection();
    			resultSet = statement.executeQuery("select roomnum from openmeetings.room_huiqian");
    			String allrooms = new String();
    			while (resultSet.next()) {
					allrooms = allrooms + resultSet.getInt("roomnum") + ",";
				}
    			return allrooms;
			} catch (Exception e) {
				throw e;
			}finally{
				close();
			}
			
		}
    //by zhang
//    public ArrayList<Room> getAllRooms2() throws Exception{
//    		try {
//    			databaseConnection();
//    			
//    			resultSet = statement.executeQuery("select * from openmeetings.room_huiqian");
//
//    			ArrayList<Room> list = new ArrayList<Room>();
//    			
//    			while (resultSet.next()) {
//    				
//    				Room newroom = new Room();
//    				
//    				int roomnum = resultSet.getInt("roomnum");
//    				String capacity = resultSet.getString("capacity");
//    				String location =resultSet.getString("equipment");
//    				String roomname = resultSet.getString("roomname");
//
//    				newroom.setRoomnum(roomnum);
//    				newroom.setCapacity(capacity);
//    				newroom.setLocation(location);
//    				newroom.setRoomname(roomname);				
//					
//					 list.add(newroom);
//					 System.out.println("room list:"+list);
//				}
//    			return list;
//			} catch (Exception e) {
//				throw e;
//			}finally{
//				close();
//			}
//			
//		}
    // by zhang
    	public String getAllTimeslots() throws Exception{
		try {
			databaseConnection();
			resultSet = statement.executeQuery("select ID,timeslots.timeslot from openmeetings.timeslots ");
			String timeslotstring = new String();
			while (resultSet.next()) {
				timeslotstring = timeslotstring+resultSet.getString("ID")+",";
			}
			return timeslotstring;
		} catch (Exception e) {
			throw e;
		}finally{
			close();
		}
		
	}
    	//
    	public ArrayList<Booking> getBookingInfobyDate(String date) throws Exception {
    	    try {
    	    	databaseConnection();	    	
    	      // Result set get the result of the SQL query
    	      resultSet = statement.executeQuery("select * from openmeetings.booking where date = '"+ date+"'" );
    	      ArrayList<Booking> list = new ArrayList<Booking>();
    	   
    	       // ResultSet is initially before the first data set
    	      while (resultSet.next()) {
    	       
    	    	   Booking newbooking = new Booking();
    	      	//  int userID = resultSet.getInt("id");
    	    	  int bookingNum = resultSet.getInt("bookingNum");
    	      	  String booker = resultSet.getString("name");
//    	      	  Date booking_date =resultSet.getDate("date");
    	          int roomnum = resultSet.getInt("roomnum");
    	          String confername = resultSet.getString("confername");
    	          String confertype = resultSet.getString("confertype");
    	          String confertheme = resultSet.getString("confertheme");	 
    	          String conferagenda = resultSet.getString("conferagenda");
    	          String participants = resultSet.getString("participants");
    	          String timeslotID = resultSet.getString("timeslotID");
    	          String bookinghash = resultSet.getString("bookinghash");
    	         
    	          newbooking.setBookingNum(bookingNum);
    	          newbooking.setName(booker);
//    	          newbooking.setDate(booking_date);
    	          newbooking.setRoomNum(roomnum);
    	          newbooking.setConferName(confername);
    	          newbooking.setConferType(confertype);
    	          newbooking.setConferTheme(confertheme);
    	          newbooking.setConferAgenda(conferagenda);
    	          newbooking.setConferparticipants(participants);
    	          newbooking.setTime(timeslotID);       
    	          newbooking.setBookingHash(bookinghash);              
    	          
    	          
    	          list.add(newbooking);
    	          System.out.println("查询启动了"+list+booker+confername+confertype);
    	      }
    	      return list;
    	     	      
    	    } catch (Exception e) {
    	      throw e;
    	     
    	    } finally {
    	      close();
    	    }

    	  }
    	
    	
    //by chenxin
    public String getlotbyDate(String date) throws Exception{
		// TODO Auto-generated method stub
	  try {
	    	databaseConnection();
	        // Result set get the result of the SQL query
		    resultSet = statement.executeQuery("select timeslotID from openmeetings.booking where date='"+date+"'");
		    String allslot = new String();		
		    
		    while (resultSet.next()) {
		    	allslot  = allslot + resultSet.getString("timeslotID") + ",";		    	 
		    }			 
	    return allslot;
    } catch (Exception e) {
       throw e; 
    } finally {
     close();
   }
	}
    
  //by chenxin
  public String getinquirebyDate(String date) throws Exception {
	  
	    try {
	    	databaseConnection();
	        // Result set get the result of the SQL query
		    resultSet = statement.executeQuery("select roomnum from openmeetings.booking where date='"+date+"'");
		    
		    String allroom = new String();
		    
		    while (resultSet.next()) {
			 //  to get the columns via name
		    	 allroom = allroom + resultSet.getInt("roomnum") + ",";		    	 
		    }				 
	    return allroom;
      } catch (Exception e) {
         throw e;   
      } finally {
       close();
     }
  }	    
    
//method to get the already booked bookings
//  public String getBookedTimes(Date date) throws Exception {
//	    try {
//	    	 databaseConnection();
//	         SimpleDateFormat DATE_FORMAT = new SimpleDateFormat("yyyy-MM-dd");
//	      // Result set get the result of the SQL query
//	      resultSet = statement.executeQuery("select ID,timeslots.timeslot,name from room_booking.timeslots,room_booking.booking "
//	      		+ "where ID=booking.timeslot and date='"+DATE_FORMAT.format(date)+"' order by ID desc");
//	     String timeslotstring = new String();
//	     while (resultSet.next()) {
//	    //getting the id, timeslot and username to the string. because user can see to whom that booking is belongs to and can
//	    	 //delete only his/her bookings.
//	    timeslotstring = timeslotstring+ resultSet.getString("ID")+";"+resultSet.getString("name")+";("+resultSet.getString("timeslot")+"),";	     
//	          
//	      } 
//	      return timeslotstring;
//	     	      
//	    } catch (Exception e) {
//	      throw e;
//	     
//	    } finally {
//	      close();
//	    }
//			    
//	  }
  
//method to get the fileInfo by bookinghash
public ArrayList<File> getFileInfobyBookingHash(int conferId) throws Exception {
	ArrayList<File> list = new ArrayList<File>();
	    try {
	    	 databaseConnection();
	    	 
	      // Result set get the result of the SQL query
	      resultSet = statement.executeQuery("select id,filename,uploader,uploadtime,roomnum,bookingnum,filesize from openmeetings.file "
	      		+ "where bookingnum= '"+conferId+"'");
	    
	     
	     while (resultSet.next()) {
	    	 File newfile = new File();
	    	 int id = resultSet.getInt("id");
	    	 String filename = resultSet.getString("filename");
	    	 String uploader = resultSet.getString("uploader");
	    	 Date uploadtime = resultSet.getDate("uploadtime");
	    	 int roomnum = resultSet.getInt("roomnum");
	    	 int bookingnum = resultSet.getInt("bookingnum");
	    	 int filesize = resultSet.getInt("filesize");
	    	
	    	 newfile.setId(id);
	    	 newfile.setFilename(filename);
	    	 newfile.setUploader(uploader);
	    	 newfile.setUploadtime(uploadtime);
	    	 newfile.setRoomnum(roomnum);
	    	 newfile.setBookingnum(bookingnum);
	    	 newfile.setFilesize(filesize);	  	
	    	 
	    	 list.add(newfile);
	    	 	             
	      } 
	      return list;
	     	      
	    } catch (Exception e) {
	      throw e;
	     
	    } finally {
	      close();
	    }
			    
	  }
  
  //method to delete a booking
 public void deleteBooking(String name, Date date,int time) throws Exception {
	 try {
		 	databaseConnection();
	         // change the format of the date
	      	SimpleDateFormat DATE_FORMAT = new SimpleDateFormat("yyyy-MM-dd");
	      	//sql to delete a booking from the booking table
	      	statement.execute("delete from openmeetings.booking where name='"+ name+"' and date='"+DATE_FORMAT.format(date)+"' and timeslotID='"+time+"'");
	    } catch (Exception e) {
	      throw e;
	     
	    } finally {
	      close();
	    }
	    Component frame = null;//message
		JOptionPane.showMessageDialog(frame,
	    	    "Booking is deleted successfully",
	    	    "",
	    	    JOptionPane.PLAIN_MESSAGE);
	   	  }
 
	//method to a add a new room to the reservation page 
//	public void addRoom(int roomnum, int capacity,String location,String equipment) throws Exception {
//		    try {
//		    	databaseConnection();
//		      	
//		      	statement.execute("insert into room_booking.room_huiqian set roomnum='"+ roomnum+"',capacity='"+capacity+
//		      			"',location='"+location+"',equipment='"+equipment+"'");		      	
//		      
//		    } catch (Exception e) {
//		      throw e;
//		     
//		    } finally {
//		      close();
//		    }
//		    Component frame = null;//message
//			JOptionPane.showMessageDialog(frame,
//		    	    "room is added successfully",
//		    	    "",
//		    	    JOptionPane.PLAIN_MESSAGE);	    
//			}
 
 // method to a add a new user to the user table
// public void addUser(int userId, String username, String pass, String fname, String lname, String userType) throws Exception {
//	    try {
//	    	databaseConnection();
//	      	//add a new user to the user table
//	      	statement.execute("insert into room_booking.user set userid='"+ userId+"',userName='"+username+
//	      			"',password='"+pass+"',firstname='"+fname+"',lastname='"+lname+"',usertype='"+userType+"'");
//	      	
//	      
//	    } catch (Exception e) {
//	      throw e;
//	     
//	    } finally {
//	      close();
//	    }
//	    Component frame = null;//message
//		JOptionPane.showMessageDialog(frame,
//	    	    "user is added successfully",
//	    	    "",
//	    	    JOptionPane.PLAIN_MESSAGE);	    
// 		}
 
//method to delete a user
// public void deleteUser(String username) throws Exception {
//	 try {
//		 	databaseConnection();
//	      	statement.execute("delete from room_booking.booking where name='"+ username+"'");//delete the users bookings when deleting of 
//		 	//the corresponding user
//		 	//sql to delete a booking from the booking table
//	      	statement.execute("delete from room_booking.user where userName='"+ username+"'");
//	      
//	      	
//	    } catch (Exception e) {
//	      throw e;
//	     
//	    } finally {
//	      close();
//	    }
//	 	Component frame = null;//message
//		JOptionPane.showMessageDialog(frame,
//	    	    "user is deleted successfully",
//	    	    "",
//	    	    JOptionPane.PLAIN_MESSAGE);
//
//	   	  }
 public ArrayList<File> searchFile(String name, String people, String room, String start, String end) throws Exception{
     // TODO Auto-generated method stub  "select ID,timeslots.timeslot from room_booking.timeslots "
  ArrayList<File> list = new ArrayList<File>();
  String insert ="";
  String sql ="";
  try {
    	databaseConnection();
        // Result set get the result of the SQL query
    	if (!name.equals("")||!people.equals("")||!room.equals("")||!start.equals("")||!end.equals(""))
    	{
    		insert = insert+" where ";

              if(!name.equals("")) 
              {
            	  insert = insert + "filename LIKE '%"+name+"%' AND ";  
              }
                 if(!people.equals(""))
                 {
                   insert = insert + "uploader='"+people+"' AND "; 
                 }
                    if(!room.equals("")&&!room.equals("null"))
                    {
                    	insert = insert + "roomnum='"+room+"' AND "; 
                    }
                      if(!start.equals("")&&!end.equals(""))
                      {
                    	  insert = insert +"uploadtime > '"+start+"' AND uploadtime <='"+end+"' AND";
                      }
                      insert=insert.substring(0,insert.length()-4);
                       
    	              sql = "select * from openmeetings.file" + insert;

    	              System.out.println(sql);
    	              resultSet = statement.executeQuery(sql);
    	              while(resultSet.next()){
        	
        	 String filename = resultSet.getString("filename");
	         String uploader = resultSet.getString("uploader");
	         Date uploadtime = resultSet.getDate("uploadtime");
	         int roomnum = resultSet.getInt("roomnum");
	         
	         File file = new File();	         
	         
        	 file.setFilename(filename);
        	 file.setUploader(uploader);
        	 file.setUploadtime(uploadtime);
        	 file.setRoomnum(roomnum);
        	
        	 list.add(file);
          }
    	}
        return list;
  
     } catch (Exception e) {
       throw e;

        } finally {
          close();
            }
}


 }

